name: Frontend Continuous Integration

on: 
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths: 
      - "starter/frontend/**"
env:
  NODE_VERSION: 18.x

jobs:

  lint:
    name: Frontend LINT JOB
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            npm-

      - name: Install dependencies
        run: |
          npm install

      - name: Run ESLint
        run: |
          npm run lint -- --fix

  test:
    name: Frontend TEST JOB
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            npm-
      - name: Install dependencies
        run: |
          npm install -f
      - name: Run tests
        run: |
          npm run test
  build:
    name: Frontend BUILD JOB
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            npm-
      - name: Install dependencies
        run: |
          npm install
      - name: Run tests
        run: |
          npm run test
      - name: Build Docker Image
        run: |
          cd starter/frontend
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .

